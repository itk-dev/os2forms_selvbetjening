on: pull_request
name: PR Review
jobs:
  changelog:
    runs-on: ubuntu-latest
    name: Changelog should be updated
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Git fetch
        run: git fetch

      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  test-composer-files:
    name: Validate composer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: ctype, dom, iconv, json, zip, gd, soap
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Validate composer files
        run: |
          composer validate composer.json

  coding-standards:
    name: PHP - Check Coding Standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: ctype, dom, iconv, json, zip, gd, soap
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress --no-scripts
          # @see https://github.com/Dealerdirect/phpcodesniffer-composer-installer#calling-the-plugin-directly
          composer run-script install-codestandards
      - name: PHPCS
        run: |
          composer coding-standards-check

  coding-standards-markdown:
    name: Yarn - Check Coding Standards (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '20' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: |
          yarn install
          yarn coding-standards-check

  code-analysis:
    name: PHP - Code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: ctype, dom, iconv, json, zip, gd, soap
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          # Using `--no-scripts` breaks something with mglaman/drupal-check.
          composer install --no-interaction --no-progress --no-scripts
      - name: code-analysis
        run: |
          composer code-analysis

  coding-standards-custom-themes:
    name: Yarn - Check Coding Standards in custom themes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup docker network
        run: docker network create frontend

      - name: Setup docker network
        run: docker network create serviceplatformen_organisation_api_app

      - name: Install build dependencies
        run: docker compose run --rm node yarn --cwd web/themes/custom/os2forms_selvbetjening_theme install

      - name: Check coding standards
        run: docker compose run --rm node yarn --cwd web/themes/custom/os2forms_selvbetjening_theme check-coding-standards

  check-custom-theme-assets:
    name: Check custom theme assets are up to date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup docker network
        run: docker network create frontend

      - name: Setup docker network
        run: docker network create serviceplatformen_organisation_api_app

      - name: Install build dependencies
        run: docker compose run --rm node yarn --cwd web/themes/custom/os2forms_selvbetjening_theme install

      - name: Build theme assets
        run: docker compose run --rm node yarn --cwd web/themes/custom/os2forms_selvbetjening_theme build

      - name: Check for changes in built css
        run: git diff --diff-filter=ACMRT --exit-code web/themes/custom/os2forms_selvbetjening_theme/build

  install-site:
    name: Check that site can be installed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install site
        run: |
          docker network create frontend
          docker network create serviceplatformen_organisation_api_app
          docker compose pull
          docker compose up --detach

          # Important: Use --no-interaction to make https://getcomposer.org/doc/06-config.md#discard-changes have effect.
          docker compose exec --user root phpfpm composer install --no-interaction

          # Install the site
          docker compose exec --user root phpfpm vendor/bin/drush site:install --existing-config --yes

          # Download and install external libraries
          docker compose exec --user root phpfpm vendor/bin/drush webform:libraries:download

          # Build theme assets
          docker compose run --rm node yarn --cwd /app/web/themes/custom/os2forms_selvbetjening_theme install
          docker compose run --rm node yarn --cwd /app/web/themes/custom/os2forms_selvbetjening_theme build

          # Open the site
          echo $(docker compose exec phpfpm vendor/bin/drush --uri=http://$(docker compose port nginx 8080) user:login)

  update-site:
    name: Check that site can be updated
    runs-on: ubuntu-latest
    steps:
      # Install site from our base ref
      - uses: actions/checkout@master
        with:
          ref: ${{ github.base_ref }}

      - name: setup-docker-and-composer
        run: |
          docker network create frontend
          docker network create serviceplatformen_organisation_api_app
          docker compose pull
          docker compose up --detach

          # Important: Use --no-interaction to make https://getcomposer.org/doc/06-config.md#discard-changes have effect.
          docker compose exec --user root phpfpm composer install --no-interaction

      - name: Install site
        run: |
          # Install the site from config
          docker compose exec --user root phpfpm vendor/bin/drush site:install --existing-config --yes

      - name: Clean up root stuff
        run: |
          sudo chown -Rv $USER:$USER vendor/ web/ || true
          sudo chmod -Rv a+w web/sites/default || true

      # Install site with our current ref
      - uses: actions/checkout@master
        with:
          # We want to keep site files generated by site install.
          # https://github.com/actions/checkout?tab=readme-ov-file#usage
          clean: false

      - name: setup-docker-and-composer
        run: |
          docker compose pull
          docker compose up --detach

          # Important: Use --no-interaction to make https://getcomposer.org/doc/06-config.md#discard-changes have effect.
          docker compose exec --user root phpfpm composer install --no-interaction

      - name: Update site
        run: |
          docker compose exec --user root phpfpm vendor/bin/drush deploy --yes

  load-fixtures:
    name: Check that fixtures can be loaded
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install site
        run: |
          docker network create frontend
          docker network create serviceplatformen_organisation_api_app
          docker compose pull
          docker compose up --detach

          # Important: Use --no-interaction to make https://getcomposer.org/doc/06-config.md#discard-changes have effect.
          docker compose exec --user root phpfpm composer install --no-interaction

          # Install the site
          docker compose exec --user root phpfpm vendor/bin/drush --yes site:install --existing-config --locale=en

      - name: Load fixtures
        run: |
          cat > web/sites/default/settings.local.php <<'EOF'
          <?php

          // See https://www.drupal.org/docs/8/core/modules/file/overview#s-private-file-system-settings-in-drupal-8 for details.
          $settings['file_private_path'] = $app_root . '/../private';
          EOF

          docker compose exec phpfpm vendor/bin/drush --yes pm:install os2forms_selvbetjening_fixtures
          docker compose exec phpfpm vendor/bin/drush --yes content-fixtures:load
