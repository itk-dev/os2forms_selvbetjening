diff --git a/src/Event/WebformSubmissionDataEvent.php b/src/Event/WebformSubmissionDataEvent.php
new file mode 100644
index 0000000..d4768dc
--- /dev/null
+++ b/src/Event/WebformSubmissionDataEvent.php
@@ -0,0 +1,53 @@
+<?php
+
+namespace Drupal\webform_rest\Event;
+
+use Drupal\Component\EventDispatcher\Event;
+use Drupal\webform\WebformSubmissionInterface;
+
+/**
+ * Class WebformSubmissionGetResponseEvent, an event to change the response from calling GET webform submission.
+ */
+class WebformSubmissionDataEvent extends Event
+{
+  /**
+   * @var array
+   */
+  private array $data;
+
+  /**
+   * @var WebformSubmissionInterface
+   */
+  private WebformSubmissionInterface $webformSubmission;
+
+  /**
+   * Construct for injection dependency.
+   *
+   * @param array $data
+   * @param WebformSubmissionInterface $webformSubmission
+   */
+  public function __construct(array $data, WebformSubmissionInterface $webformSubmission) {
+      $this->setData($data);
+      $this->webformSubmission = $webformSubmission;
+    }
+
+  /**
+   * @return WebformSubmissionInterface
+   */
+  public function getWebformSubmission(): WebformSubmissionInterface
+  {
+    return $this->webformSubmission;
+  }
+
+  public function getData(): array
+  {
+      return $this->data;
+  }
+
+  public function setData(array $data)
+  {
+    $this->data = $data;
+    return $this;
+  }
+}
+
diff --git a/src/Plugin/rest/resource/WebformSubmissionResource.php b/src/Plugin/rest/resource/WebformSubmissionResource.php
index d2e08c5..7f667c7 100644
--- a/src/Plugin/rest/resource/WebformSubmissionResource.php
+++ b/src/Plugin/rest/resource/WebformSubmissionResource.php
@@ -2,9 +2,13 @@

 namespace Drupal\webform_rest\Plugin\rest\resource;

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\file\Entity\File;
 use Drupal\webform\WebformSubmissionForm;
+use Drupal\webform_rest\Event\WebformSubmissionDataEvent;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ModifiedResourceResponse;
+use Drupal\webform_revisions\Entity\WebformRevisionsSubmission;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Symfony\Component\DependencyInjection\ContainerInterface;

@@ -35,6 +39,13 @@ class WebformSubmissionResource extends ResourceBase {
    */
   protected $request;

+  /**
+   * An event dispatcher instance to use for configuration events.
+   *
+   * @var \Symfony\Contracts\EventDispatcher\EventDispatcherInterface
+   */
+  protected $eventDispatcher;
+
   /**
    * {@inheritdoc}
    */
@@ -42,6 +53,7 @@ class WebformSubmissionResource extends ResourceBase {
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
     $instance->entityTypeManager = $container->get('entity_type.manager');
     $instance->request = $container->get('request_stack');
+    $instance->eventDispatcher = $container->get('event_dispatcher');
     return $instance;
   }

@@ -79,6 +91,7 @@ class WebformSubmissionResource extends ResourceBase {
       ];
       return new ModifiedResourceResponse($errors, 400);
     }
+
     $webform_submission = reset($webform_submission);

     // Check for a submission.
@@ -91,9 +104,12 @@ class WebformSubmissionResource extends ResourceBase {
         // Grab submission data.
         $data = $webform_submission->getData();

+        $event = new WebformSubmissionDataEvent($data, $webform_submission);
+        $this->eventDispatcher->dispatch($event);
+
         $response = [
           'entity' => $webform_submission,
-          'data' => $data,
+          'data' => $event->getData(),
         ];

         // Return the submission.
@@ -182,5 +198,4 @@ class WebformSubmissionResource extends ResourceBase {

     throw new NotFoundHttpException(t("Can't load webform submission."));
   }
-
 }
