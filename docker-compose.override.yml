# https://github.com/Soluto/oidc-server-mock

services:
  oidc-server-mock:
    image: ghcr.io/soluto/oidc-server-mock:latest
    # Let this container be accessible both internally and externally on the same domain.
    container_name: idp.${COMPOSE_DOMAIN}
    networks:
      - app
      - frontend
    ports:
      - '4011:80'
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SERVER_OPTIONS_INLINE: |
        {
          "AccessTokenJwtType": "JWT",
          "Discovery": {
            "ShowKeySet": true
          },
          "Authentication": {
            "CookieSameSiteMode": "Lax",
            "CheckSessionCookieSameSiteMode": "Lax"
          }
        }
      LOGIN_OPTIONS_INLINE: |
        {
          "AllowRememberLogin": false
        }
      LOGOUT_OPTIONS_INLINE: |
        {
          "AutomaticRedirectAfterSignOut": true
        }
      API_SCOPES_INLINE: |
        - Name: some-app-scope-1
        - Name: some-app-scope-2
      API_RESOURCES_INLINE: |
        - Name: some-app
          Scopes:
            - some-app-scope-1
            - some-app-scope-2
          UserClaims:
            - some-app-user-custom-claim
            - groups
      USERS_CONFIGURATION_INLINE: |
        [
          {
            "SubjectId": "administrator",
            "Username": "administrator",
            "Password": "administrator",
            "Claims": [
              {
                "Type": "name",
                "Value": "Admin Jensen",
                "ValueType": "string"
              },
              {
                "Type": "email",
                "Value": "administrator@example.com",
                "ValueType": "string"
              },
              {
                "Type": "groups",
                "Value": "[\"AD-administrator\"]",
                "ValueType": "json"
              }
            ]
          },
          {
            "SubjectId":"1705880000",
            "Username":"1705880000",
            "Password":"1705880000",
            "Claims": [
              {
                "Type": "name",
                "Value": "Test Testersen",
                "ValueType": "string"
              },
              {
                "Type": "email",
                "Value": "1705880000@cpr.example.com",
                "ValueType": "string"
              },
              {
                "Type": "cpr",
                "Value": "1705880000",
                "ValueType": "string"
              }
            ]
          }
        ]
      CLIENTS_CONFIGURATION_INLINE: |
        - ClientId: mock-idp-admin
          ClientSecrets: [mock-idp-admin-secret]
          Description: Mock admin IdP
          AllowedGrantTypes:
            # - client_credentials
            # - implicit
            - authorization_code
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704963181
          RequireClientSecret: false
          AllowAccessTokensViaBrowser: true
          # https://github.com/Soluto/oidc-server-mock/issues/26#issuecomment-705022941
          AlwaysIncludeUserClaimsInIdToken: true
          AllowedScopes:
            - openid
            - profile
            - email
          ClientClaimsPrefix: ''
          RedirectUris:
            - https://selvbetjening.local.itkdev.dk/openid-connect/generic
            - https://selvbetjening.local.itkdev.dk/os2forms_nemlogin_openid_connect/authenticate
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/60
          PostLogoutRedirectUris:
            - https://selvbetjening.local.itkdev.dk/node/126
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704845375
          RequirePkce: false
          Claims:
            - Type: string_claim
              Value: string_claim_value
              ValueType: string
            - Type: json_claim
              Value: '["value1", "value2"]'
              ValueType: json
            - Type: groups
              Value: '["value1", "value2"]'
              ValueType: json

        - ClientId: mock-idp-citizen
          ClientSecrets: [mock-idp-citizen-secret]
          Description: Mock citizen IdP
          AllowedGrantTypes:
            # - client_credentials
            # - implicit
            - authorization_code
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704963181
          RequireClientSecret: false
          AllowAccessTokensViaBrowser: true
          # https://github.com/Soluto/oidc-server-mock/issues/26#issuecomment-705022941
          AlwaysIncludeUserClaimsInIdToken: true
          AllowedScopes:
            - openid
            - profile
            - email
          ClientClaimsPrefix: ''
          RedirectUris:
            - https://selvbetjening.local.itkdev.dk/openid-connect/generic
            - https://selvbetjening.local.itkdev.dk/os2forms_nemlogin_openid_connect/authenticate
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/60
          PostLogoutRedirectUris:
            - https://selvbetjening.local.itkdev.dk/node/126
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704845375
          RequirePkce: false

      # Needed to set custom claim types in "profile"
      # https://github.com/Soluto/oidc-server-mock/issues/123#issuecomment-1427129278
      OVERRIDE_STANDARD_IDENTITY_RESOURCES: true
      IDENTITY_RESOURCES_INLINE: |
        # https://auth0.com/docs/get-started/apis/scopes/openid-connect-scopes#standard-claims
        - Name: openid
          ClaimTypes:
            - sub
        - Name: profile
          ClaimTypes:
            - name
            - groups
            - cpr
        - Name: email
          ClaimTypes:
            - email

    volumes:
      - .:/tmp/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_idp.rule=Host(`idp.${COMPOSE_DOMAIN}`)"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_idp.loadbalancer.server.port=80"
